# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake on multiple platforms

on:
  push:
    branches: [ "other/fmt" ]
  pull_request:
    branches: [ "other/fmt" ]
    
env:
  package_path: ${{ github.workspace }}/build/package/

  cmake_preset: package
  build_path: ${{ github.workspace }}/build
#  package_path: ${{ github.workspace }}/build/_packages
  wheels_path: ${{ github.workspace }}/build/wheels
  dotnet_bin_path: ${{ github.workspace }}/build/bindings/CSharp/bin
  package_path_rel: build/_packages # WA for https://github.com/actions/checkout/issues/785
  vm_name: device_simulator
  simulator_app_artifact: SimulatorApp
  simulator_package_artifact: SimulatorPackage
  python_version_build: 3.11
  python_versions: 3.8 3.9 3.10 3.11 3.12
  windows_x64_artifact: SdkWindows64
  linux_x64_artifact: SdkLinux64
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true # Workaround for: https://github.blog/changelog/2023-09-22-github-actions-transitioning-from-node-16-to-node-20/

jobs:
  package_linux_wheels:
    runs-on: ubuntu-latest
    name: ${{ matrix.name }}

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.name }}
      cancel-in-progress: true
    timeout-minutes: 180
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: manylinux2014 gcc Release
            image: quay.io/pypa/manylinux2014_x86_64
            cmake_generator: Ninja
            cmake_build_type: Release
            additional_packages:
            cc: gcc
            cxx: g++
            cpack: ZIP

    container:
      image: ${{ matrix.image }}
      env:
        TZ: Europe/Berlin
        CC: ${{ matrix.cc }}
        CXX: ${{ matrix.cxx }}

    steps:
      - name: Install basic dependencies
        run: |
          yum update -y
          yum install -y git

      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Install build dependencies
        run: |
          yum install -y ${{ matrix.additional_packages }} \
              ninja-build \
              mono-core \
              freetype-devel \
              libudev-devel \
              libX11-devel \
              libXcursor-devel \
              libXrandr-devel \
              libpcap-devel
        
      - name: Create build dir
        run: mkdir build

      - name: Configure and build Python Wheels
        working-directory: build
        run: |
          cmake -G "${{ matrix.cmake_generator }}" -DOPENDAQ_ENABLE_TESTS=OFF -DOPENDAQ_GENERATE_PYTHON_BINDINGS=ON -DDAQMODULES_REF_DEVICE_MODULE=ON -DDAQMODULES_REF_FB_MODULE=ON -DDAQMODULES_AUDIO_DEVICE_MODULE=ON -DDAQMODULES_OPENDAQ_CLIENT_MODULE=ON -DDAQMODULES_OPENDAQ_SERVER_MODULE=ON -DOPENDAQ_ENABLE_OPCUA=ON -DOPENDAQ_ENABLE_WEBSOCKET_STREAMING=ON -DOPENDAQ_ENABLE_NATIVE_STREAMING=ON -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }} -DCI_GIT_BRANCH=${{ github.ref }} -DOPENDAQ_PYTHON_VERSION=3.10 ..
          cmake --build .
